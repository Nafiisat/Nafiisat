import re
from cryptography.fernet import Fernet
import pyotp
import time


def validate_password(password):
    # Check for length (8 to 12 characters)
    if not 8 <= len(password) <= 12:
        return False

    # Check for at least 2 capital or lowercase letters
    if sum(1 for char in password if char.isalpha()) < 2:
        return False

    # Check for at least one number
    if not any(char.isdigit() for char in password):
        return False

    # Check for no spaces
    if ' ' in password:
        return False

    return True


def encrypt_decrypt(username, password):
    key = Fernet.generate_key()
    cipher_suite = Fernet(key)

    encrypted_username = cipher_suite.encrypt(username.encode())
    encrypted_password = cipher_suite.encrypt(password.encode())

    decrypted_username = cipher_suite.decrypt(encrypted_username).decode()
    decrypted_password = cipher_suite.decrypt(encrypted_password).decode()

    print(f"Encrypted Username: {encrypted_username}")
    print(f"Encrypted Password: {encrypted_password}")
    print(f"Decrypted Username: {decrypted_username}")
    print(f"Decrypted Password: {decrypted_password}")


def multifactor_authentication():
    totp = pyotp.TOTP(pyotp.random_base32())

    # Simulate a new one-time PIN
    otp = totp.now()
    print(f"Generated OTP: {otp}")

    # Verify the user
    user_input = input("Enter OTP to verify: ")
    if totp.verify(user_input):
        print("User verified successfully.")
    else:
        print("Invalid OTP.")

    # Wait for 30 seconds
    time.sleep(30)

    # Verify again after waiting
    user_input = input("Enter OTP to verify again: ")
    if totp.verify(user_input):
        print("User verified successfully after waiting.")
    else:
        print("Invalid OTP.")


if __name__ == "__main__":
    # Example usage
    user_password = input("Enter your password: ")
    if validate_password(user_password):
        print("Password is valid.")
    else:
        print("Password is invalid.")

    username = input("Enter your username: ")
    password = input("Enter your password: ")
    encrypt_decrypt(username, password)

    multifactor_authentication()



